package com.adsale.ChinaPlas.dao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END

import android.databinding.ObservableBoolean;
import android.os.Parcel;
import android.os.Parcelable;

import com.adsale.ChinaPlas.utils.AppUtil;
import com.adsale.ChinaPlas.utils.Constant;

/**
 * Entity mapped to table "INDUSTRY".
 */
public class Industry implements Parcelable {

    private String CatalogProductSubID;
    private String CatEng;
    private String CatTC;
    private String CatSC;
    private Integer TCStroke;
    private String SCPY;
    private Boolean IsSelected;
    private String EN_SORT;

    // KEEP FIELDS - put your custom fields here
    public final ObservableBoolean isTypeLabel = new ObservableBoolean();
    public final ObservableBoolean selected = new ObservableBoolean(false);
    // KEEP FIELDS END

    public Industry() {
    }

    public Industry(String CatalogProductSubID) {
        this.CatalogProductSubID = CatalogProductSubID;
    }

    public Industry(String CatalogProductSubID, String CatEng, String CatTC, String CatSC, Integer TCStroke, String SCPY, Boolean IsSelected, String enSort) {
        this.CatalogProductSubID = CatalogProductSubID;
        this.CatEng = CatEng;
        this.CatTC = CatTC;
        this.CatSC = CatSC;
        this.TCStroke = TCStroke;
        this.SCPY = SCPY;
        this.IsSelected = IsSelected;
        this.EN_SORT = enSort;
    }

    public String getCatalogProductSubID() {
        return CatalogProductSubID;
    }

    public void setCatalogProductSubID(String CatalogProductSubID) {
        this.CatalogProductSubID = CatalogProductSubID;
    }

    public String getCatEng() {
        return CatEng;
    }

    public void setCatEng(String CatEng) {
        this.CatEng = CatEng;
    }

    public String getCatTC() {
        return CatTC;
    }

    public void setCatTC(String CatTC) {
        this.CatTC = CatTC;
    }

    public String getCatSC() {
        return CatSC;
    }

    public void setCatSC(String CatSC) {
        this.CatSC = CatSC;
    }

    public Integer getTCStroke() {
        return TCStroke;
    }

    public void setTCStroke(Integer TCStroke) {
        this.TCStroke = TCStroke;
    }

    public String getSCPY() {
        return SCPY;
    }

    public void setSCPY(String SCPY) {
        this.SCPY = SCPY;
    }

    public String getEN_SORT() {
        return EN_SORT;
    }

    public void setEN_SORT(String EN_SORT) {
        this.EN_SORT = EN_SORT;
    }

    public Boolean getIsSelected() {
        return IsSelected;
    }

    public void setIsSelected(Boolean IsSelected) {
        this.IsSelected = IsSelected;
    }

    // KEEP METHODS - put your custom methods here
    public String getIndustryName() {
        return AppUtil.getName(CatTC, CatEng, CatSC);
    }

    public String getSort() {
        if (EN_SORT.contains("#")) {
            EN_SORT = "#";
        }
        return AppUtil.getName(TCStroke + Constant.TRAD_STROKE, EN_SORT, SCPY);
    }

    public void setIndustryName(int language, String industryName) {
        if (language == 0) {
            this.CatTC = industryName;
        } else if (language == 1) {
            this.CatEng = industryName;
        } else {
            this.CatSC = industryName;
        }
    }

    public void parser(String[] inputStream) {
        this.CatalogProductSubID = inputStream[0];
        this.CatEng = inputStream[1];
        this.CatTC = inputStream[2];
        this.CatSC = inputStream[3];
        if (inputStream[4].equals("#")) {
            this.TCStroke = 999;
        } else
            this.TCStroke = Integer.valueOf(inputStream[4]);

        if (inputStream[5].equals("#")) {
            inputStream[5] = "ZZ";
        }
        this.SCPY = inputStream[5];
    }

    public int count;
    public String IndustryIDParent;



    // KEEP METHODS END

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeString(this.CatalogProductSubID);
        dest.writeString(this.CatEng);
        dest.writeString(this.CatTC);
        dest.writeString(this.CatSC);
        dest.writeValue(this.TCStroke);
        dest.writeString(this.SCPY);
        dest.writeValue(this.IsSelected);
        dest.writeString(this.EN_SORT);
        dest.writeInt(this.count);
        dest.writeString(this.IndustryIDParent);
    }

    protected Industry(Parcel in) {
        this.CatalogProductSubID = in.readString();
        this.CatEng = in.readString();
        this.CatTC = in.readString();
        this.CatSC = in.readString();
        this.TCStroke = (Integer) in.readValue(Integer.class.getClassLoader());
        this.SCPY = in.readString();
        this.IsSelected = (Boolean) in.readValue(Boolean.class.getClassLoader());
        this.EN_SORT = in.readString();
        this.count = in.readInt();
        this.IndustryIDParent = in.readString();
    }

    public static final Parcelable.Creator<Industry> CREATOR = new Parcelable.Creator<Industry>() {
        public Industry createFromParcel(Parcel source) {
            return new Industry(source);
        }

        public Industry[] newArray(int size) {
            return new Industry[size];
        }
    };
}
