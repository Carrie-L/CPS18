package com.adsale.ChinaPlas.dao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END

import android.databinding.ObservableBoolean;
import android.databinding.ObservableInt;
import android.os.Parcel;
import android.os.Parcelable;

import com.adsale.ChinaPlas.App;
import com.adsale.ChinaPlas.utils.AppUtil;
import com.adsale.ChinaPlas.utils.LogUtil;

import cn.bmob.v3.BmobObject;


/**
 * Entity mapped to table "MAIN_ICON".
 */
public class MainIcon extends BmobObject implements Parcelable {

    private String IconID;
    /**
     * Not-null value.
     */
    private String TitleTW;
    /**
     * Not-null value.
     */
    private String TitleCN;
    /**
     * Not-null value.
     */
    private String TitleEN;

    public String MenuSeq;
    public String DrawerSeq;

    /**
     * Not-null value.
     */
    private String BaiDu_TJ;
    private String Google_TJ;

    private String CFile;
    private String DrawerIcon;
    /**
     * Not-null value.
     */
    private String Icon;


    private boolean IsDelete;
    private boolean IsHidden;

//    private String createdAt;
//    private String upStringdAt;

    private String createdAt;
    private String updatedAt;


    // KEEP FIELDS - put your custom fields here
    /**
     * 默认全部展开，则设为true；默认全部折叠，则设为false
     */
    public boolean isExpanded = false;

    /**
     * 侧边栏是否有子项
     */
    public boolean hasChild = false;

    /**
     * Menu按钮是否有子按钮
     */
    public boolean isMenuHasChild = false;

    public boolean isChecked = false;

    public int color;


    public final ObservableInt updateCount = new ObservableInt(0);

    public final ObservableBoolean isDrawerHasChild = new ObservableBoolean(false);
    public final ObservableBoolean isDrawerChild = new ObservableBoolean(false);


    // KEEP FIELDS END

    public MainIcon() {

    }

    public MainIcon(String IconID, String TitleTW, String TitleCN, String TitleEN, String MenuSeq, String DrawerSeq, String BaiDu_TJ, String Google_TJ, String CFile, String DrawerIcon, String Icon, Boolean IsDelete, Boolean IsHidden, String createdAt, String upStringdAt) {
        this.IconID = IconID;
        this.TitleTW = TitleTW;
        this.TitleCN = TitleCN;
        this.TitleEN = TitleEN;
        this.MenuSeq = MenuSeq;
        this.DrawerSeq = DrawerSeq;
        this.BaiDu_TJ = BaiDu_TJ;
        this.Google_TJ = Google_TJ;
        this.CFile = CFile;
        this.DrawerIcon = DrawerIcon;
        this.Icon = Icon;
        this.IsDelete = IsDelete;
        this.IsHidden = IsHidden;
        this.createdAt = createdAt;
        this.updatedAt = upStringdAt;
    }

    public String getIconID() {
        return IconID;
    }

    public void setIconID(String IconID) {
        this.IconID = IconID;
    }

    /**
     * Not-null value.
     */
    public String getTitleTW() {
        return TitleTW;
    }

    /**
     * Not-null value; ensure this value is available before it is saved to the database.
     */
    public void setTitleTW(String TitleTW) {
        this.TitleTW = TitleTW;
    }

    /**
     * Not-null value.
     */
    public String getTitleCN() {
        return TitleCN;
    }

    /**
     * Not-null value; ensure this value is available before it is saved to the database.
     */
    public void setTitleCN(String TitleCN) {
        this.TitleCN = TitleCN;
    }

    /**
     * Not-null value.
     */
    public String getTitleEN() {
        return TitleEN;
    }

    /**
     * Not-null value; ensure this value is available before it is saved to the database.
     */
    public void setTitleEN(String TitleEN) {
        this.TitleEN = TitleEN;
    }

    public String getMenuSeq() {
        return MenuSeq;
    }

    public void setMenuSeq(String MenuSeq) {
        this.MenuSeq = MenuSeq;
    }

    public String getDrawerSeq() {
        return DrawerSeq;
    }

    public void setDrawerSeq(String DrawerSeq) {
        this.DrawerSeq = DrawerSeq;
    }

    public String getBaiDu_TJ() {
        return BaiDu_TJ;
    }

    public void setBaiDu_TJ(String BaiDu_TJ) {
        this.BaiDu_TJ = BaiDu_TJ;
    }

    public String getGoogle_TJ() {
        return Google_TJ;
    }

    public void setGoogle_TJ(String Google_TJ) {
        this.Google_TJ = Google_TJ;
    }

    public String getCFile() {
        return CFile;
    }

    public void setCFile(String CFile) {
        this.CFile = CFile;
    }

    public String getDrawerIcon() {
        return DrawerIcon;
    }

    public void setDrawerIcon(String DrawerIcon) {
        this.DrawerIcon = DrawerIcon;
    }

    public String getIcon() {
        return Icon;
    }

    public void setIcon(String Icon) {
        this.Icon = Icon;
    }

    public Boolean getIsDelete() {
        return IsDelete;
    }

    public void setIsDelete(Boolean IsDelete) {
        this.IsDelete = IsDelete;
    }

    public Boolean getIsHidden() {
        return IsHidden;
    }

    public void setIsHidden(Boolean IsHidden) {
        this.IsHidden = IsHidden;
    }

    public String getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(String createdAt) {
        this.createdAt = createdAt;
    }

    public String getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

    // KEEP METHODS - put your custom methods here
    public String getTitle(int language) {
//        int language = AppUtil.getCurLanguage();
        if ((TitleCN.contains("|") || TitleEN.contains("|") || TitleTW.contains("|")) && AppUtil.isLogin()) {
            return title(language).split("\\|")[1];
        } else if ((TitleCN.contains("|") || TitleEN.contains("|") || TitleTW.contains("|")) && !AppUtil.isLogin()) {
            return title(language).split("\\|")[0];
        } else {
            return title(language);
        }
    }

    public String getTitle(int language, boolean isLogined) {
        if ((TitleCN.contains("|") || TitleEN.contains("|") || TitleTW.contains("|")) && isLogined) {
            return title(language).split("\\|")[1];
        } else if ((TitleCN.contains("|") || TitleEN.contains("|") || TitleTW.contains("|")) && !isLogined) {
            return title(language).split("\\|")[0];
        } else {
            return title(language);
        }

    }

    private String title(int language) {
        if (language == 0) {
            return TitleTW;
        } else if (language == 1) {
            return TitleEN;
        } else {
            return TitleCN;
        }
    }

    public void setTitle(int language, String title) {
        if (language == 0) {
            this.TitleTW = title;
        } else if (language == 1) {
            this.TitleEN = title;
        } else {
            this.TitleCN = title;
        }
    }

    public void setTitle(String titleTC, String titleSC, String titleEN) {
        this.TitleTW = titleTC;
        this.TitleEN = titleEN;
        this.TitleCN = titleSC;
    }


    @Override
    public String toString() {
        return "MainIcon{" +
                "IconID='" + IconID + '\'' +
                ", TitleTW='" + TitleTW + '\'' +
                ", TitleCN='" + TitleCN + '\'' +
                ", TitleEN='" + TitleEN + '\'' +
                ", MenuSeq='" + MenuSeq + '\'' +
                ", DrawerSeq='" + DrawerSeq + '\'' +
                ", BaiDu_TJ='" + BaiDu_TJ + '\'' +
                ", Google_TJ='" + Google_TJ + '\'' +
                ", CFile='" + CFile + '\'' +
                ", DrawerIcon='" + DrawerIcon + '\'' +
                ", Icon='" + Icon + '\'' +
                ", IsDelete=" + IsDelete +
                ", IsHidden=" + IsHidden +
                ", createdAt=" + createdAt +
                ", updatedAt=" + updatedAt +
//                ", createdAt=" + new SimpleStringFormat("yyyy-MM-dd HH:mm:ss", Locale.CHINA).format(createdAt) +
//                ", upStringdAt=" +new SimpleStringFormat("yyyy-MM-dd HH:mm:ss", Locale.CHINA).format(upStringdAt) +
//                ", isExpanded=" + isExpanded +
//                ", hasChild=" + hasChild +
//                ", isMenuHasChild=" + isMenuHasChild +
//                ", isChecked=" + isChecked +
//                ", color=" + color +
//                ", upStringCount=" + updateCount +
//                ", isDrawerHasChild=" + isDrawerHasChild +
//                ", isDrawerChild=" + isDrawerChild +
//                ", isCoverGone=" + isCoverGone +
//                ", isClicked=" + isClicked +
//                ", lastPos=" + lastPos +
                '}';
    }

    /**
     * 封面图是否已经消失，true：消失；false：没消失；默认false
     */
    public boolean isCoverGone = false;

    public boolean isClicked = false;


    public int lastPos = 0;

    public String getDrawerIconFull() {
        if (App.isNetworkAvailable) {
            return App.mSP_Config.getString("MainIconBaseUrl", "").concat(DrawerIcon);
        } else {
            return DrawerIcon;
        }

    }

    // KEEP METHODS END

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        LogUtil.i("writeToParcel", "createdAt=" + createdAt + ",upStringdAt=" + updatedAt);

        dest.writeString(this.IconID);
        dest.writeString(this.TitleTW);
        dest.writeString(this.TitleCN);
        dest.writeString(this.TitleEN);
        dest.writeString(this.MenuSeq);
        dest.writeString(this.DrawerSeq);
        dest.writeString(this.BaiDu_TJ);
        dest.writeString(this.Google_TJ);
        dest.writeString(this.CFile);
        dest.writeString(this.DrawerIcon);
        dest.writeString(this.Icon);
        dest.writeByte(IsDelete ? (byte) 1 : (byte) 0);
        dest.writeByte(IsHidden ? (byte) 1 : (byte) 0);
        dest.writeString(this.createdAt);
        dest.writeString(this.updatedAt);


//        dest.writeParcelable(this.createdAt, flags);
//        dest.writeParcelable(this.upStringdAt, flags);


    }

    protected MainIcon(Parcel in) {
        this.IconID = in.readString();
        this.TitleTW = in.readString();
        this.TitleCN = in.readString();
        this.TitleEN = in.readString();
        this.MenuSeq = in.readString();
        this.DrawerSeq = in.readString();
        this.BaiDu_TJ = in.readString();
        this.Google_TJ = in.readString();
        this.CFile = in.readString();
        this.DrawerIcon = in.readString();
        this.Icon = in.readString();
        this.IsDelete = in.readByte() != 0;
        this.IsHidden = in.readByte() != 0;
        this.createdAt = in.readString();
        this.updatedAt = in.readString();

//        this.createdAt = in.readParcelable(String.class.getClassLoader());
//        this.upStringdAt = in.readParcelable(String.class.getClassLoader());

    }

    public static final Creator<MainIcon> CREATOR = new Creator<MainIcon>() {
        public MainIcon createFromParcel(Parcel source) {
            return new MainIcon(source);
        }

        public MainIcon[] newArray(int size) {
            return new MainIcon[size];
        }
    };


}
