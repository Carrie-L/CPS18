package com.adsale.ChinaPlas.dao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END

import android.databinding.ObservableBoolean;
import android.databinding.ObservableInt;
import android.os.Parcel;
import android.os.Parcelable;

import com.adsale.ChinaPlas.App;
import com.adsale.ChinaPlas.utils.AppUtil;


/**
 * Entity mapped to table "MAIN_ICON".
 */
public class MainIcon implements Parcelable {

    private String IconID;
    /**
     * Not-null value.
     */
    private String TitleTW;
    /**
     * Not-null value.
     */
    private String TitleCN;
    /**
     * Not-null value.
     */
    private String TitleEN;
    /**
     * Not-null value.
     */
    private String Icon;
    private int CType;
    private String CFile;
    private String ZipDateTime;
    private int IsHidden;
    private int SEQ;
    /**
     * Not-null value.
     */
    private String CreateDateTime;
    /**
     * Not-null value.
     */
    private String UpdateDateTime;
    /**
     * Not-null value.
     */
    private String RecordTimeStamp;
    private int IsDown;
    /**
     * Not-null value.
     */
    private String BaiDu_TJ;
    private String Google_TJ;


    // KEEP FIELDS - put your custom fields here
    /**
     * 默认全部展开，则设为true；默认全部折叠，则设为false
     */
    public boolean isExpanded = false;

    /**
     * 侧边栏是否有子项
     */
    public boolean hasChild = false;

    /**
     * Menu按钮是否有子按钮
     */
    public boolean isMenuHasChild = false;

    public boolean isChecked = false;

    public int color;

    /**
     * 新增列
     */
    public String DrawerList;
    public String MenuList;
    public String DrawerIcon;
    public String IconTextColor;
    public Integer IsDelete;

    public final ObservableInt updateCount = new ObservableInt(0);

    public final ObservableBoolean isDrawerHasChild = new ObservableBoolean(false);
    public final ObservableBoolean isDrawerChild = new ObservableBoolean(false);

    // KEEP FIELDS END

    public MainIcon() {
    }

    public MainIcon(String IconID) {
        this.IconID = IconID;
    }

    public MainIcon(String IconID, String TitleTW, String TitleCN, String TitleEN, String Icon, int CType, String CFile, String ZipDateTime, int IsHidden, int SEQ, String CreateDateTime, String UpdateDateTime, String RecordTimeStamp, int IsDown, String BaiDu_TJ, String Google_TJ
            , String DrawerList, String MenuList, String DrawerIcon, String IconTextColor, int IsDelete) {
        this.IconID = IconID;
        this.TitleTW = TitleTW;
        this.TitleCN = TitleCN;
        this.TitleEN = TitleEN;
        this.Icon = Icon;
        this.CType = CType;
        this.CFile = CFile;
        this.ZipDateTime = ZipDateTime;
        this.IsHidden = IsHidden;
        this.SEQ = SEQ;
        this.CreateDateTime = CreateDateTime;
        this.UpdateDateTime = UpdateDateTime;
        this.RecordTimeStamp = RecordTimeStamp;
        this.IsDown = IsDown;
        this.BaiDu_TJ = BaiDu_TJ;
        this.Google_TJ = Google_TJ;
        this.DrawerList = DrawerList;
        this.MenuList = MenuList;
        this.DrawerIcon = DrawerIcon;
        this.IconTextColor = IconTextColor;
        this.IsDelete = IsDelete;
    }

    public String getIconID() {
        return IconID;
    }

    public void setIconID(String IconID) {
        this.IconID = IconID;
    }

    /**
     * Not-null value.
     */
    public String getTitleTW() {
        return TitleTW;
    }

    /**
     * Not-null value; ensure this value is available before it is saved to the database.
     */
    public void setTitleTW(String TitleTW) {
        this.TitleTW = TitleTW;
    }

    /**
     * Not-null value.
     */
    public String getTitleCN() {
        return TitleCN;
    }

    /**
     * Not-null value; ensure this value is available before it is saved to the database.
     */
    public void setTitleCN(String TitleCN) {
        this.TitleCN = TitleCN;
    }

    /**
     * Not-null value.
     */
    public String getTitleEN() {
        return TitleEN;
    }

    /**
     * Not-null value; ensure this value is available before it is saved to the database.
     */
    public void setTitleEN(String TitleEN) {
        this.TitleEN = TitleEN;
    }

    /**
     * Not-null value.
     */
    public String getIcon() {
        return Icon;
    }

    /**
     * Not-null value; ensure this value is available before it is saved to the database.
     */
    public void setIcon(String Icon) {
        this.Icon = Icon;
    }

    public int getCType() {
        return CType;
    }

    public void setCType(int CType) {
        this.CType = CType;
    }

    public String getCFile() {
        return CFile;
    }

    public void setCFile(String CFile) {
        this.CFile = CFile;
    }

    public String getZipDateTime() {
        return ZipDateTime;
    }

    public void setZipDateTime(String ZipDateTime) {
        this.ZipDateTime = ZipDateTime;
    }

    public int getIsHidden() {
        return IsHidden;
    }

    public void setIsHidden(int IsHidden) {
        this.IsHidden = IsHidden;
    }

    public int getSEQ() {
        return SEQ;
    }

    public void setSEQ(int SEQ) {
        this.SEQ = SEQ;
    }

    /**
     * Not-null value.
     */
    public String getCreateDateTime() {
        return CreateDateTime;
    }

    /**
     * Not-null value; ensure this value is available before it is saved to the database.
     */
    public void setCreateDateTime(String CreateDateTime) {
        this.CreateDateTime = CreateDateTime;
    }

    /**
     * Not-null value.
     */
    public String getUpdateDateTime() {
        return UpdateDateTime;
    }

    /**
     * Not-null value; ensure this value is available before it is saved to the database.
     */
    public void setUpdateDateTime(String UpdateDateTime) {
        this.UpdateDateTime = UpdateDateTime;
    }

    /**
     * Not-null value.
     */
    public String getRecordTimeStamp() {
        return RecordTimeStamp;
    }

    /**
     * Not-null value; ensure this value is available before it is saved to the database.
     */
    public void setRecordTimeStamp(String RecordTimeStamp) {
        this.RecordTimeStamp = RecordTimeStamp;
    }

    public int getIsDown() {
        return IsDown;
    }

    public void setIsDown(int IsDown) {
        this.IsDown = IsDown;
    }

    /**
     * Not-null value.
     */
    public String getBaiDu_TJ() {
        return BaiDu_TJ;
    }

    /**
     * Not-null value; ensure this value is available before it is saved to the database.
     */
    public void setBaiDu_TJ(String BaiDu_TJ) {
        this.BaiDu_TJ = BaiDu_TJ;
    }

    public String getGoogle_TJ() {
        return Google_TJ;
    }

    public void setGoogle_TJ(String Google_TJ) {
        this.Google_TJ = Google_TJ;
    }

    // KEEP METHODS - put your custom methods here
    public String getTitle(int language) {
//        int language = AppUtil.getCurLanguage();
        if ((TitleCN.contains("|") || TitleEN.contains("|") || TitleTW.contains("|")) && AppUtil.isLogin()) {
            return title(language).split("\\|")[1];
        } else if ((TitleCN.contains("|") || TitleEN.contains("|") || TitleTW.contains("|")) && !AppUtil.isLogin()) {
            return title(language).split("\\|")[0];
        } else {
            return title(language);
        }
    }

    public String getTitle(int language, boolean isLogined) {
        if ((TitleCN.contains("|") || TitleEN.contains("|") || TitleTW.contains("|")) && isLogined) {
            return title(language).split("\\|")[1];
        } else if ((TitleCN.contains("|") || TitleEN.contains("|") || TitleTW.contains("|")) && !isLogined) {
            return title(language).split("\\|")[0];
        } else {
            return title(language);
        }

    }

    private String title(int language) {
        if (language == 0) {
            return TitleTW;
        } else if (language == 1) {
            return TitleEN;
        } else {
            return TitleCN;
        }
    }

    public void setTitle(int language, String title) {
        if (language == 0) {
            this.TitleTW = title;
        } else if (language == 1) {
            this.TitleEN = title;
        } else {
            this.TitleCN = title;
        }
    }

    public void setTitle(String titleTC, String titleSC, String titleEN) {
        this.TitleTW = titleTC;
        this.TitleEN = titleEN;
        this.TitleCN = titleSC;
    }

    public String getDrawerList() {
        return DrawerList;
    }

    public String getMenuList() {
        return MenuList;
    }

    public String getDrawerIcon() {
        return DrawerIcon;
    }

    public String getIconTextColor() {
        return IconTextColor;
    }

    public Integer getIsDelete() {
        return IsDelete;
    }

    public void setIsDelete(Integer isDelete) {
        IsDelete = isDelete;
    }

    public void setDrawerList(String drawerList) {
        DrawerList = drawerList;
    }

    public void setMenuList(String menuList) {
        MenuList = menuList;
    }

    public void setDrawerIcon(String drawerIcon) {
        DrawerIcon = drawerIcon;
    }

    public void setIconTextColor(String iconTextColor) {
        IconTextColor = iconTextColor;
    }

    @Override
    public String toString() {
        return "MainIcon{" +
                "TitleTW='" + TitleTW + '\'' +
                ", IconID='" + IconID + '\'' +
                ", TitleCN='" + TitleCN + '\'' +
                ", TitleEN='" + TitleEN + '\'' +
                ", Icon='" + Icon + '\'' +
                ", CType=" + CType +
                ", CFile='" + CFile + '\'' +
                ", ZipDateTime='" + ZipDateTime + '\'' +
                ", IsHidden=" + IsHidden +
                ", SEQ=" + SEQ +
                ", CreateDateTime='" + CreateDateTime + '\'' +
                ", UpdateDateTime='" + UpdateDateTime + '\'' +
                ", RecordTimeStamp='" + RecordTimeStamp + '\'' +
                ", IsDown=" + IsDown +
                ", BaiDu_TJ='" + BaiDu_TJ + '\'' +
                ", Google_TJ='" + Google_TJ + '\'' +
                ", DrawerList='" + DrawerList + '\'' +
                ", MenuList='" + MenuList + '\'' +
                ", DrawerIcon='" + DrawerIcon + '\'' +
                ", IconTextColor='" + IconTextColor + '\'' +
                ", IsDelete='" + IsDelete + '\'' +
                ", isExpanded=" + isExpanded +
                ", hasChild=" + hasChild +
                ", isMenuHasChild=" + isMenuHasChild +
                ", isCoverGone=" + isCoverGone +
                ", lastPos=" + lastPos +
                '}';
    }

    /**
     * 封面图是否已经消失，true：消失；false：没消失；默认false
     */
    public boolean isCoverGone = false;

    public boolean isClicked = false;


    public int lastPos = 0;

    public String getDrawerIconFull() {
        if (App.isNetworkAvailable) {
            return App.mSP_Config.getString("MainIconBaseUrl", "").concat(DrawerIcon);
        } else {
            return DrawerIcon;
        }

    }

    // KEEP METHODS END

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeString(this.IconID);
        dest.writeString(this.TitleTW);
        dest.writeString(this.TitleCN);
        dest.writeString(this.TitleEN);
        dest.writeString(this.Icon);
        dest.writeInt(this.CType);
        dest.writeString(this.CFile);
        dest.writeString(this.ZipDateTime);
        dest.writeInt(this.IsHidden);
        dest.writeInt(this.SEQ);
        dest.writeString(this.CreateDateTime);
        dest.writeString(this.UpdateDateTime);
        dest.writeString(this.RecordTimeStamp);
        dest.writeInt(this.IsDown);
        dest.writeString(this.BaiDu_TJ);
        dest.writeString(this.Google_TJ);
        dest.writeString(this.DrawerList);
        dest.writeString(this.MenuList);
        dest.writeString(this.DrawerIcon);
        dest.writeString(this.IconTextColor);
        dest.writeInt(this.IsDelete);
        dest.writeByte(isExpanded ? (byte) 1 : (byte) 0);
        dest.writeByte(hasChild ? (byte) 1 : (byte) 0);
        dest.writeByte(isMenuHasChild ? (byte) 1 : (byte) 0);
        dest.writeByte(isChecked ? (byte) 1 : (byte) 0);
        dest.writeInt(this.color);
        dest.writeByte(isCoverGone ? (byte) 1 : (byte) 0);
        dest.writeByte(isClicked ? (byte) 1 : (byte) 0);
        dest.writeInt(this.lastPos);
    }

    protected MainIcon(Parcel in) {
        this.IconID = in.readString();
        this.TitleTW = in.readString();
        this.TitleCN = in.readString();
        this.TitleEN = in.readString();
        this.Icon = in.readString();
        this.CType = in.readInt();
        this.CFile = in.readString();
        this.ZipDateTime = in.readString();
        this.IsHidden = in.readInt();
        this.SEQ = in.readInt();
        this.CreateDateTime = in.readString();
        this.UpdateDateTime = in.readString();
        this.RecordTimeStamp = in.readString();
        this.IsDown = in.readInt();
        this.BaiDu_TJ = in.readString();
        this.Google_TJ = in.readString();
        this.DrawerList = in.readString();
        this.MenuList = in.readString();
        this.DrawerIcon = in.readString();
        this.IconTextColor = in.readString();
        this.IsDelete = in.readInt();
        this.isExpanded = in.readByte() != 0;
        this.hasChild = in.readByte() != 0;
        this.isMenuHasChild = in.readByte() != 0;
        this.isChecked = in.readByte() != 0;
        this.color = in.readInt();
        this.isCoverGone = in.readByte() != 0;
        this.isClicked = in.readByte() != 0;
        this.lastPos = in.readInt();
    }

    public static final Parcelable.Creator<MainIcon> CREATOR = new Parcelable.Creator<MainIcon>() {
        public MainIcon createFromParcel(Parcel source) {
            return new MainIcon(source);
        }

        public MainIcon[] newArray(int size) {
            return new MainIcon[size];
        }
    };
}
