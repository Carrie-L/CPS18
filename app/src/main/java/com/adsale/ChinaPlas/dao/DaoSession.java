package com.adsale.ChinaPlas.dao;

import android.database.sqlite.SQLiteDatabase;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 *
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig mainIconDaoConfig;
    private final DaoConfig mainIconTestDaoConfig;
    private final DaoConfig applicationDaoConfig;
    private final DaoConfig applicationCompanyDaoConfig;
    private final DaoConfig countryDaoConfig;
    private final DaoConfig exhibitorDaoConfig;
    private final DaoConfig exhibitorUserUpdateDaoConfig;
    private final DaoConfig floorDaoConfig;
    private final DaoConfig mapFloorDaoConfig;
    private final DaoConfig nameCardDaoConfig;
    private final DaoConfig newsDaoConfig;
    private final DaoConfig newsLinkDaoConfig;
    private final DaoConfig scheduleInfoDaoConfig;
    private final DaoConfig updateDateDaoConfig;
    private final DaoConfig webContentDaoConfig;
    private final DaoConfig bussinessMappingDaoConfig;
    private final DaoConfig historyExhibitorDaoConfig;
    private final DaoConfig updateCenterDaoConfig;
    private final DaoConfig industryDaoConfig;
    private final DaoConfig companyProductDaoConfig;
    private final DaoConfig seminarInfoDaoConfig;
    private final DaoConfig seminarSpeakerDaoConfig;
    private final DaoConfig floorPlanCoordinateDaoConfig;

    private final DaoConfig newProductInfoDaoConfig;
    private final DaoConfig newCategoryIDDaoConfig;
    private final DaoConfig newProductsIDDaoConfig;
    private final DaoConfig productImageDaoConfig;
    private final DaoConfig caterorySubConfig;
    private final DaoConfig exhibitorZoneDaoConfig;
    private final DaoConfig zoneDaoConfig;
    private final DaoConfig eventConfig;
    private final DaoConfig eventApplicationConfig;

    private final MainIconDao mainIconDao;
    private final MainIconTestDao mainIconTestDao;
    private final ApplicationDao applicationDao;
    private final CompanyApplicationDao applicationCompanyDao;
    private final IndustryDao industryDao;
    private final CompanyProductDao companyProductDao;
    private final CountryDao countryDao;
    private final ExhibitorDao exhibitorDao;
    private final ExhibitorUserUpdateDao exhibitorUserUpdateDao;
    private final MapDao mapDao;
    private final MapFloorDao mapFloorDao;
    private final NameCardDao nameCardDao;
    private final NewsDao newsDao;
    private final NewsLinkDao newsLinkDao;
    private final ScheduleInfoDao scheduleInfoDao;
    private final UpdateDateDao updateDateDao;
    private final WebContentDao webContentDao;
    private final BussinessMappingDao bussinessMappingDao;
    private final HistoryExhibitorDao historyExhibitorDao;
    private final UpdateCenterDao updateCenterDao;

    private final SeminarInfoDao seminarInfoDao;
    private final SeminarSpeakerDao seminarSpeakerDao;
    private final FloorPlanCoordinateDao floorPlanCoordinateDao;

    private final NewCategoryIDDao newCategoryIDDao;
    private final NewProductInfoDao newProductInfoDao;
    private final NewProductsIDDao newProductsIDDao;
    private final ProductImageDao productImageDao;
    private final NewCategorySubDao categorySubDao;
    private final ExhibitorZoneDao exhibitorZoneDao;
    private final ZoneDao zoneDao;
    private final ConcurrentEventDao mEventDao;
    private final EventApplicationDao eventApplicationDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, java.util.Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        mainIconDaoConfig = daoConfigMap.get(MainIconDao.class).clone();
        mainIconDaoConfig.initIdentityScope(type);

        mainIconTestDaoConfig = daoConfigMap.get(MainIconTestDao.class).clone();
        mainIconTestDaoConfig.initIdentityScope(type);

        applicationDaoConfig = daoConfigMap.get(ApplicationDao.class).clone();
        applicationDaoConfig.initIdentityScope(type);

        applicationCompanyDaoConfig = daoConfigMap.get(CompanyApplicationDao.class).clone();
        applicationCompanyDaoConfig.initIdentityScope(type);

        countryDaoConfig = daoConfigMap.get(CountryDao.class).clone();
        countryDaoConfig.initIdentityScope(type);

        exhibitorDaoConfig = daoConfigMap.get(ExhibitorDao.class).clone();
        exhibitorDaoConfig.initIdentityScope(type);

        exhibitorUserUpdateDaoConfig = daoConfigMap.get(ExhibitorUserUpdateDao.class).clone();
        exhibitorUserUpdateDaoConfig.initIdentityScope(type);

        floorDaoConfig = daoConfigMap.get(MapDao.class).clone();
        floorDaoConfig.initIdentityScope(type);

        mapFloorDaoConfig = daoConfigMap.get(MapFloorDao.class).clone();
        mapFloorDaoConfig.initIdentityScope(type);

        nameCardDaoConfig = daoConfigMap.get(NameCardDao.class).clone();
        nameCardDaoConfig.initIdentityScope(type);

        newsDaoConfig = daoConfigMap.get(NewsDao.class).clone();
        newsDaoConfig.initIdentityScope(type);

        newsLinkDaoConfig = daoConfigMap.get(NewsLinkDao.class).clone();
        newsLinkDaoConfig.initIdentityScope(type);

        scheduleInfoDaoConfig = daoConfigMap.get(ScheduleInfoDao.class).clone();
        scheduleInfoDaoConfig.initIdentityScope(type);

        updateDateDaoConfig = daoConfigMap.get(UpdateDateDao.class).clone();
        updateDateDaoConfig.initIdentityScope(type);

        webContentDaoConfig = daoConfigMap.get(WebContentDao.class).clone();
        webContentDaoConfig.initIdentityScope(type);

        bussinessMappingDaoConfig = daoConfigMap.get(BussinessMappingDao.class).clone();
        bussinessMappingDaoConfig.initIdentityScope(type);

        historyExhibitorDaoConfig = daoConfigMap.get(HistoryExhibitorDao.class).clone();
        historyExhibitorDaoConfig.initIdentityScope(type);

        updateCenterDaoConfig = daoConfigMap.get(UpdateCenterDao.class).clone();
        updateCenterDaoConfig.initIdentityScope(type);

        industryDaoConfig = daoConfigMap.get(IndustryDao.class).clone();
        industryDaoConfig.initIdentityScope(type);

        companyProductDaoConfig = daoConfigMap.get(CompanyProductDao.class).clone();
        companyProductDaoConfig.initIdentityScope(type);

        seminarInfoDaoConfig = daoConfigMap.get(SeminarInfoDao.class).clone();
        seminarInfoDaoConfig.initIdentityScope(type);

        seminarSpeakerDaoConfig = daoConfigMap.get(SeminarSpeakerDao.class).clone();
        seminarSpeakerDaoConfig.initIdentityScope(type);

        floorPlanCoordinateDaoConfig = daoConfigMap.get(FloorPlanCoordinateDao.class).clone();
        floorPlanCoordinateDaoConfig.initIdentityScope(type);

        newProductInfoDaoConfig = daoConfigMap.get(NewProductInfoDao.class).clone();
        newProductInfoDaoConfig.initIdentityScope(type);

        newCategoryIDDaoConfig = daoConfigMap.get(NewCategoryIDDao.class).clone();
        newCategoryIDDaoConfig.initIdentityScope(type);

        newProductsIDDaoConfig = daoConfigMap.get(NewProductsIDDao.class).clone();
        newProductsIDDaoConfig.initIdentityScope(type);

        productImageDaoConfig = daoConfigMap.get(ProductImageDao.class).clone();
        productImageDaoConfig.initIdentityScope(type);

        caterorySubConfig = daoConfigMap.get(NewCategorySubDao.class).clone();
        caterorySubConfig.initIdentityScope(type);

        exhibitorZoneDaoConfig = daoConfigMap.get(ExhibitorZoneDao.class).clone();
        exhibitorZoneDaoConfig.initIdentityScope(type);

        zoneDaoConfig = daoConfigMap.get(ZoneDao.class).clone();
        zoneDaoConfig.initIdentityScope(type);

        eventConfig = daoConfigMap.get(ConcurrentEventDao.class).clone();
        eventConfig.initIdentityScope(type);

        eventApplicationConfig = daoConfigMap.get(EventApplicationDao.class).clone();
        eventApplicationConfig.initIdentityScope(type);

        mainIconDao = new MainIconDao(mainIconDaoConfig, this);
        mainIconTestDao = new MainIconTestDao(mainIconTestDaoConfig, this);
        applicationDao = new ApplicationDao(applicationDaoConfig, this);
        applicationCompanyDao = new CompanyApplicationDao(applicationCompanyDaoConfig, this);
        countryDao = new CountryDao(countryDaoConfig, this);
        exhibitorDao = new ExhibitorDao(exhibitorDaoConfig, this);
        exhibitorUserUpdateDao = new ExhibitorUserUpdateDao(exhibitorUserUpdateDaoConfig, this);
        mapDao = new MapDao(floorDaoConfig, this);
        mapFloorDao = new MapFloorDao(mapFloorDaoConfig, this);
        nameCardDao = new NameCardDao(nameCardDaoConfig, this);
        newsDao = new NewsDao(newsDaoConfig, this);
        newsLinkDao = new NewsLinkDao(newsLinkDaoConfig, this);
        scheduleInfoDao = new ScheduleInfoDao(scheduleInfoDaoConfig, this);
        updateDateDao = new UpdateDateDao(updateDateDaoConfig, this);
        webContentDao = new WebContentDao(webContentDaoConfig, this);
        bussinessMappingDao = new BussinessMappingDao(bussinessMappingDaoConfig, this);
        historyExhibitorDao = new HistoryExhibitorDao(historyExhibitorDaoConfig, this);
        updateCenterDao = new UpdateCenterDao(updateCenterDaoConfig, this);
        industryDao = new IndustryDao(industryDaoConfig, this);
        companyProductDao = new CompanyProductDao(companyProductDaoConfig, this);
        seminarInfoDao = new SeminarInfoDao(seminarInfoDaoConfig, this);
        seminarSpeakerDao = new SeminarSpeakerDao(seminarSpeakerDaoConfig, this);
        floorPlanCoordinateDao = new FloorPlanCoordinateDao(floorPlanCoordinateDaoConfig, this);

        newCategoryIDDao = new NewCategoryIDDao(newCategoryIDDaoConfig, this);
        newProductInfoDao = new NewProductInfoDao(newProductInfoDaoConfig, this);
        newProductsIDDao = new NewProductsIDDao(newProductsIDDaoConfig, this);
        productImageDao = new ProductImageDao(productImageDaoConfig, this);
        categorySubDao = new NewCategorySubDao(caterorySubConfig, this);
        exhibitorZoneDao = new ExhibitorZoneDao(exhibitorZoneDaoConfig, this);
        zoneDao = new ZoneDao(zoneDaoConfig, this);
        mEventDao = new ConcurrentEventDao(eventConfig, this);
        eventApplicationDao = new EventApplicationDao(eventApplicationConfig, this);


        registerDao(MainIcon.class, mainIconDao);
        registerDao(MainIconTest.class, mainIconTestDao);
        registerDao(Application.class, applicationDao);
        registerDao(CompanyApplication.class, applicationCompanyDao);
        registerDao(Industry.class, industryDao);
        registerDao(CompanyProduct.class, companyProductDao);
        registerDao(Country.class, countryDao);
        registerDao(Exhibitor.class, exhibitorDao);
        registerDao(ExhibitorUserUpdate.class, exhibitorUserUpdateDao);
        registerDao(Map.class, mapDao);
        registerDao(MapFloor.class, mapFloorDao);
        registerDao(NameCard.class, nameCardDao);
        registerDao(News.class, newsDao);
        registerDao(NewsLink.class, newsLinkDao);
        registerDao(ScheduleInfo.class, scheduleInfoDao);
        registerDao(UpdateDate.class, updateDateDao);
        registerDao(WebContent.class, webContentDao);
        registerDao(BussinessMapping.class, bussinessMappingDao);
        registerDao(HistoryExhibitor.class, historyExhibitorDao);
        registerDao(UpdateCenter.class, updateCenterDao);
        registerDao(SeminarInfo.class, seminarInfoDao);
        registerDao(SeminarSpeaker.class, seminarSpeakerDao);
        registerDao(FloorPlanCoordinate.class, floorPlanCoordinateDao);
        registerDao(NewCategoryID.class, newCategoryIDDao);
        registerDao(NewProductInfo.class, newProductInfoDao);
        registerDao(NewProductsID.class, newProductsIDDao);
        registerDao(ProductImage.class, productImageDao);
        registerDao(NewCategorySub.class, categorySubDao);
        registerDao(ExhibitorZone.class, exhibitorZoneDao);
        registerDao(Zone.class, zoneDao);
        registerDao(ConcurrentEvent.class, mEventDao);
        registerDao(EventApplication.class, eventApplicationDao);

    }

    public void clear() {
        mainIconDaoConfig.getIdentityScope().clear();
        mainIconTestDaoConfig.getIdentityScope().clear();
        applicationDaoConfig.getIdentityScope().clear();
        applicationCompanyDaoConfig.getIdentityScope().clear();
        countryDaoConfig.getIdentityScope().clear();
        exhibitorDaoConfig.getIdentityScope().clear();
        exhibitorUserUpdateDaoConfig.getIdentityScope().clear();
        floorDaoConfig.getIdentityScope().clear();
        mapFloorDaoConfig.getIdentityScope().clear();
        nameCardDaoConfig.getIdentityScope().clear();
        newsDaoConfig.getIdentityScope().clear();
        newsLinkDaoConfig.getIdentityScope().clear();
        scheduleInfoDaoConfig.getIdentityScope().clear();
        updateDateDaoConfig.getIdentityScope().clear();
        webContentDaoConfig.getIdentityScope().clear();
        bussinessMappingDaoConfig.getIdentityScope().clear();
        historyExhibitorDaoConfig.getIdentityScope().clear();
        updateCenterDaoConfig.getIdentityScope().clear();
        industryDaoConfig.getIdentityScope().clear();
        companyProductDaoConfig.getIdentityScope().clear();
        seminarInfoDaoConfig.getIdentityScope().clear();
        seminarSpeakerDaoConfig.getIdentityScope().clear();
        floorPlanCoordinateDaoConfig.getIdentityScope().clear();
        newProductsIDDaoConfig.getIdentityScope().clear();
        newProductInfoDaoConfig.getIdentityScope().clear();
        newCategoryIDDaoConfig.getIdentityScope().clear();
        productImageDaoConfig.getIdentityScope().clear();
        caterorySubConfig.getIdentityScope().clear();
        exhibitorZoneDaoConfig.getIdentityScope().clear();
        zoneDaoConfig.getIdentityScope().clear();
        eventConfig.getIdentityScope().clear();
    }

    public MainIconDao getMainIconDao() {
        return mainIconDao;
    }

    public MainIconTestDao getMainIconTestDao() {
        return mainIconTestDao;
    }

    public ApplicationDao getApplicationDao() {
        return applicationDao;
    }

    public CompanyApplicationDao getApplicationCompanyDao() {
        return applicationCompanyDao;
    }

    public CompanyProductDao getCompanyProductDao() {
        return companyProductDao;
    }

    public CountryDao getCountryDao() {
        return countryDao;
    }

    public ExhibitorDao getExhibitorDao() {
        return exhibitorDao;
    }

    public ExhibitorUserUpdateDao getExhibitorUserUpdateDao() {
        return exhibitorUserUpdateDao;
    }

    public MapDao getMapDao() {
        return mapDao;
    }

    public MapFloorDao getMapFloorDao() {
        return mapFloorDao;
    }

    public NameCardDao getNameCardDao() {
        return nameCardDao;
    }

    public NewsDao getNewsDao() {
        return newsDao;
    }

    public NewsLinkDao getNewsLinkDao() {
        return newsLinkDao;
    }


    public ScheduleInfoDao getScheduleInfoDao() {
        return scheduleInfoDao;
    }

    public UpdateDateDao getUpdateDateDao() {
        return updateDateDao;
    }

    public WebContentDao getWebContentDao() {
        return webContentDao;
    }

    public BussinessMappingDao getBussinessMappingDao() {
        return bussinessMappingDao;
    }

    public HistoryExhibitorDao getHistoryExhibitorDao() {
        return historyExhibitorDao;
    }

    public UpdateCenterDao getUpdateCenterDao() {
        return updateCenterDao;
    }

    public IndustryDao getIndustryDao() {
        return industryDao;
    }

    public SeminarInfoDao getSeminarInfoDao() {
        return seminarInfoDao;
    }

    public SeminarSpeakerDao getSeminarSpeakerDao() {
        return seminarSpeakerDao;
    }

    public FloorPlanCoordinateDao getFloorPlanCoordinateDao() {
        return floorPlanCoordinateDao;
    }

    public NewCategoryIDDao getNewCategoryIDDao() {
        return newCategoryIDDao;
    }

    public NewProductInfoDao getNewProductInfoDao() {
        return newProductInfoDao;
    }

    public NewProductsIDDao getNewProductsIDDao() {
        return newProductsIDDao;
    }

    public ProductImageDao getProductImageDao() {
        return productImageDao;
    }

    public NewCategorySubDao getCategorySubDao() {
        return categorySubDao;
    }

    public ExhibitorZoneDao getExhibitorZoneDao() {
        return exhibitorZoneDao;
    }

    public ZoneDao getZoneDao() {
        return zoneDao;
    }

    public ConcurrentEventDao getEventDao() {
        return mEventDao;
    }

    public EventApplicationDao getEventApplicationDao() {
        return eventApplicationDao;
    }


}
