package com.adsale.ChinaPlas.dao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here

import android.databinding.ObservableBoolean;
import android.os.Parcel;
import android.os.Parcelable;
import android.text.TextUtils;

import com.adsale.ChinaPlas.App;
import com.adsale.ChinaPlas.utils.AppUtil;
import com.adsale.ChinaPlas.utils.Constant;
import com.adsale.ChinaPlas.utils.LogUtil;

// KEEP INCLUDES END

/**
 * Entity mapped to table "EXHIBITOR".
 */
public class Exhibitor implements Parcelable {

    private String CompanyID;
    private String CompanyNameEN;
    private String CompanyNameTW;
    private String CompanyNameCN;
    private String AddressE;
    private String AddressT;
    private String AddressS;
    private String Tel;
    private String Fax;
    private String Email;
    private String Website;
    private String CountryID;
    private String BoothNo;
    private String StrokeEng;
    private String StrokeTrad;
    private String StrokeSimp;
    private String PYSimp;
    private String ImgFolder;
    private String DescE;
    private String DescS;
    private String DescT;
    private String PhotoFileName;
    private String NewTechUpdateDate;
    private String SeqEN;
    private String SeqTC;
    private String SeqSC;
    private String HallNo;
    private Integer IsFavourite = 0;
    private String Note = "";
    private Integer Rate = 0;
    private Boolean IsDelete = false;
    public Double seqHall;  // HallNo的排序

    // KEEP FIELDS - put your custom fields here
    private String descUpdatedAt;
    private String updatedAt;


    private int i = 0;

    public String CompanyName;
    public String Sort;
    public String CountryName;

    public ObservableBoolean isPhotoLogo = new ObservableBoolean(true);
    public ObservableBoolean isCollected = new ObservableBoolean(false);

    public ObservableBoolean isTypeLabel = new ObservableBoolean();
    public ObservableBoolean isD3Banner = new ObservableBoolean(false);
    private int language;

    public int function;
    public String pageID;

    // KEEP FIELDS END

    public Exhibitor() {
    }

    public Exhibitor(String CompanyID) {
        this.CompanyID = CompanyID;
    }

    public Exhibitor(String CompanyID, String CompanyNameEN, String CompanyNameTW, String CompanyNameCN, String AddressE, String AddressT, String AddressS, String Tel, String Fax, String Email, String Website, String CountryID, String BoothNo, String StrokeEng, String StrokeTrad, String StrokeSimp, String PYSimp, String ImgFolder, String DescE, String DescS, String DescT, String PhotoFileName, String NewTechUpdateDate, String SeqEN, String SeqTC, String SeqSC, String HallNo, Integer IsFavourite, String Note, Integer Rate, Boolean IsDelete, String createdAt, String updatedAt, Double seqHall) {
        this.CompanyID = CompanyID;
        this.CompanyNameEN = CompanyNameEN;
        this.CompanyNameTW = CompanyNameTW;
        this.CompanyNameCN = CompanyNameCN;
        this.AddressE = AddressE;
        this.AddressT = AddressT;
        this.AddressS = AddressS;
        this.Tel = Tel;
        this.Fax = Fax;
        this.Email = Email;
        this.Website = Website;
        this.CountryID = CountryID;
        this.BoothNo = BoothNo;
        this.StrokeEng = StrokeEng;
        this.StrokeTrad = StrokeTrad;
        this.StrokeSimp = StrokeSimp;
        this.PYSimp = PYSimp;
        this.ImgFolder = ImgFolder;
        this.DescE = DescE;
        this.DescS = DescS;
        this.DescT = DescT;
        this.PhotoFileName = PhotoFileName;
        this.NewTechUpdateDate = NewTechUpdateDate;
        this.SeqEN = SeqEN;
        this.SeqTC = SeqTC;
        this.SeqSC = SeqSC;
        this.HallNo = HallNo;
        this.IsFavourite = IsFavourite;
        this.Note = Note;
        this.Rate = Rate;
        this.IsDelete = IsDelete;
        this.descUpdatedAt = createdAt;
        this.updatedAt = updatedAt;
        this.seqHall = seqHall;
    }

    public String getDescUpdatedAt() {
        return descUpdatedAt;
    }

    public void setDescUpdatedAt(String descUpdatedAt) {
        this.descUpdatedAt = descUpdatedAt;
    }

    public String getCompanyID() {
        return CompanyID;
    }

    public void setCompanyID(String CompanyID) {
        this.CompanyID = CompanyID;
    }

    public String getCompanyNameEN() {
        return CompanyNameEN;
    }

    public void setCompanyNameEN(String CompanyNameEN) {
        this.CompanyNameEN = CompanyNameEN;
    }

    public String getCompanyNameTW() {
        return CompanyNameTW;
    }

    public void setCompanyNameTW(String CompanyNameTW) {
        this.CompanyNameTW = CompanyNameTW;
    }

    public String getCompanyNameCN() {
        return CompanyNameCN;
    }

    public void setCompanyNameCN(String CompanyNameCN) {
        this.CompanyNameCN = CompanyNameCN;
    }

    public String getAddressE() {
        return AddressE;
    }

    public void setAddressE(String AddressE) {
        this.AddressE = AddressE;
    }

    public String getAddressT() {
        return AddressT;
    }

    public void setAddressT(String AddressT) {
        this.AddressT = AddressT;
    }

    public String getAddressS() {
        return AddressS;
    }

    public void setAddressS(String AddressS) {
        this.AddressS = AddressS;
    }

    public String getTel() {
        return Tel;
    }

    public void setTel(String Tel) {
        this.Tel = Tel;
    }

    public String getFax() {
        return Fax;
    }

    public void setFax(String Fax) {
        this.Fax = Fax;
    }

    public String getEmail() {
        return Email;
    }

    public void setEmail(String Email) {
        this.Email = Email;
    }

    public String getWebsite() {
        return Website;
    }

    public void setWebsite(String Website) {
        this.Website = Website;
    }

    public String getCountryID() {
        return CountryID;
    }

    public void setCountryID(String CountryID) {
        this.CountryID = CountryID;
    }

    public String getBoothNo() {
        return BoothNo;
    }

    public void setBoothNo(String BoothNo) {
        this.BoothNo = BoothNo;
    }

    public String getStrokeEng() {
        return StrokeEng;
    }

    public void setStrokeEng(String StrokeEng) {
        this.StrokeEng = StrokeEng;
    }

    public String getStrokeTrad() {
        return StrokeTrad;
    }

    public void setStrokeTrad(String StrokeTrad) {
        this.StrokeTrad = StrokeTrad;
    }

    public String getStrokeSimp() {
        return StrokeSimp;
    }

    public void setStrokeSimp(String StrokeSimp) {
        this.StrokeSimp = StrokeSimp;
    }

    public String getPYSimp() {
        return PYSimp;
    }

    public void setPYSimp(String PYSimp) {
        this.PYSimp = PYSimp;
    }

    public String getDescE() {
        return DescE;
    }

    public void setDescE(String DescE) {
        this.DescE = DescE;
    }

    public String getDescS() {
        return DescS;
    }

    public void setDescS(String DescS) {
        this.DescS = DescS;
    }

    public String getDescT() {
        return DescT;
    }

    public void setDescT(String DescT) {
        this.DescT = DescT;
    }

    public String getPhotoFileName() {
        return PhotoFileName;
    }

    public void setPhotoFileName(String PhotoFileName) {
        this.PhotoFileName = PhotoFileName;
        isPhotoLogo.set(PhotoFileName != null && !PhotoFileName.isEmpty());
    }

    public void setNewTechUpdateDate(String newTechUpdateDate) {
        NewTechUpdateDate = newTechUpdateDate;
    }

    public String getNewTechUpdateDate() {
        return NewTechUpdateDate;
    }

    public String getHallNo() {
        if (HallNo.contains("PP")) {
            HallNo = "PP";
        }
        return HallNo.trim();
    }

    public void setHallNo(String HallNo) {
        this.HallNo = HallNo;
    }

    public Integer getIsFavourite() {
        if (IsFavourite == null) {
            IsFavourite = 0;
        }
        return IsFavourite;
    }

    public void setIsFavourite(Integer IsFavourite) {
        this.IsFavourite = IsFavourite;
        isCollected.set(IsFavourite == 1);
    }

    public String getNote() {
        return Note;
    }

    public void setNote(String Note) {
        this.Note = Note;
    }

    public String getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
    }

    public void setSeqHall(Double seqHall) {
        this.seqHall = seqHall;
    }

    public void setImgFolder(String imgFolder) {
        ImgFolder = imgFolder;
    }

    public void setSeqEN(String seqEN) {
        SeqEN = seqEN;
    }

    public void setSeqTC(String seqTC) {
        SeqTC = seqTC;
    }

    public void setSeqSC(String seqSC) {
        SeqSC = seqSC;
    }

    public void setRate(Integer rate) {
        Rate = rate;
    }

    public void setDelete(Boolean delete) {
        IsDelete = delete;
    }

    public String getImgFolder() {
        return ImgFolder;
    }

    public String getSeqEN() {
        return SeqEN;
    }

    public String getSeqTC() {
        return SeqTC;
    }

    public String getSeqSC() {
        return SeqSC;
    }

    public Integer getRate() {
        return Rate;
    }

    public Boolean getDelete() {
        return IsDelete;
    }


    // KEEP METHODS - put your custom methods here
    public String getCompanyName(int language) {
        if (language == 0) {
            return CompanyNameTW;
        } else if (language == 1) {
            return CompanyNameEN;
        } else {
            return CompanyNameCN;
        }
    }

    public String getCompanyName() {
        CompanyName = AppUtil.getName(CompanyNameTW, CompanyNameEN, CompanyNameCN);
        return CompanyName;
    }

    public void setCompanyName(int language, String companyName) {
        if (language == 0) {
            this.CompanyNameTW = companyName;
        } else if (language == 1) {
            this.CompanyNameEN = companyName;
        } else {
            this.CompanyNameCN = companyName;
        }
    }

    public String getAddress() {
        if (AppUtil.getCurLanguage() == 0 && !TextUtils.isEmpty(AddressT)) {
            return AddressT;
        } else if (AppUtil.getCurLanguage() == 1 && !TextUtils.isEmpty(AddressT)) {
            return AddressE;
        } else if (AppUtil.getCurLanguage() == 2 && !TextUtils.isEmpty(AddressS)) {
            return AddressS;
        } else {
            return address();
        }

//        if (AppUtil.getCurLanguage() == 0) {
//            if (!TextUtils.isEmpty(AddressT)) {
//                return AddressT;
//            } else {
//                return address();
//            }
//        } else if (AppUtil.getCurLanguage() == 1) {
//            if (!TextUtils.isEmpty(AddressE)) {
//                return AddressE;
//            } else {
//                return address();
//            }
//        } else {
//            if (AppUtil.getCurLanguage() == 2) {
//                if (!TextUtils.isEmpty(AddressS)) {
//                    return AddressS;
//                } else {
//                    return address();
//                }
//            }
//        }


//            if (AppUtil.getCurLanguage() == 0 && TextUtils.isEmpty(AddressT)) {
//                if (!TextUtils.isEmpty(AddressS)) {
//                    return AddressS;
//                } else if (!TextUtils.isEmpty(AddressE)) {
//                    return AddressE;
//                }
//            } else if (AppUtil.getCurLanguage() == 1 && TextUtils.isEmpty(AddressE)) {
//                if (!TextUtils.isEmpty(AddressS)) {
//                    return AddressS;
//                } else if (!TextUtils.isEmpty(AddressE)) {
//                    return AddressE;
//                }
//            } else if (AppUtil.getCurLanguage() == 2 && TextUtils.isEmpty(AddressS)) {
//                if (!TextUtils.isEmpty(AddressS)) {
//                    return AddressS;
//                } else if (!TextUtils.isEmpty(AddressE)) {
//                    return AddressE;
//                }
//            }
//        return "";

    }

    private String address() {
        if (!TextUtils.isEmpty(AddressT)) {
            return AddressT;
        } else if (!TextUtils.isEmpty(AddressE)) {
            return AddressE;
        } else if (!TextUtils.isEmpty(AddressS)) {
            return AddressS;
        }
        return "";
    }

    public void setStroke(int language, String sort) {
        if (language == 0) {
            this.StrokeTrad = sort;
        } else if (language == 1) {
            this.StrokeEng = sort;
        } else {
            this.PYSimp = sort;
        }
    }

    public static String columnName_Company(int language) {
        String columnName = "";
        if (language == 0) {
            columnName = "COMPANY_NAME_TW";
        } else if (language == 1) {
            columnName = "COMPANY_NAME_EN";
        } else if (language == 2) {
            columnName = "COMPANY_NAME_CN";
        } else {
            columnName = "COMPANY_NAME_CN,COMPANY_NAME_EN,COMPANY_NAME_TW";
        }
        return columnName;
    }

    /**
     * 在初始化数据时，把最后的 # 或 TBC 或 N/A 前面加上 999 或 ZZZ ，目的是为了排序的时候让它们在最后，省却还需另外排序的麻烦。
     * 因此在这一 getSort() 步骤，要将 999# 还原成 #.
     *
     * @return sort or hall_no
     */
    public String getSort() {
        language = AppUtil.getCurLanguage();
        /* AZ */
        if (checkStrokeEngNull() && StrokeEng.contains("#")) {
            StrokeEng = "#";
        } else if (checkPYSimpNull() && PYSimp.contains("#")) {
            PYSimp = "#";
        } else if (checkStrokeTradNull() && StrokeTrad.contains("#")) {
            StrokeTrad = "#".concat(Constant.TRAD_STROKE);
        }
        /* HALL : 999TBC || 999N/A */
        else if (checkStrokeEngNull() && StrokeEng.contains("TBC")) {
            StrokeEng = "TBC";
        } else if (checkPYSimpNull() && PYSimp.contains("TBC")) {
            PYSimp = "TBC";
        } else if (checkStrokeTradNull() && StrokeTrad.contains("TBC")) {
            StrokeTrad = "TBC";
        } else if (checkStrokeEngNull() && StrokeEng.contains("N/A")) {
            StrokeEng = "N/A";
        } else if (checkPYSimpNull() && PYSimp.contains("N/A")) {
            PYSimp = "N/A";
        } else if (checkStrokeTradNull() && StrokeTrad.contains("N/A")) {
            StrokeTrad = "N/A";
        }
        Sort = AppUtil.getName(StrokeTrad, StrokeEng, PYSimp);
        return Sort;
    }

    public void setSort(String sort) {
        if (App.mLanguage.get() == 1) {
            StrokeEng = sort;
        } else if (App.mLanguage.get() == 0) {
            StrokeTrad = sort;
        } else {
            PYSimp = sort;
        }
    }

    private boolean checkStrokeEngNull() {
        return language == 1 && !TextUtils.isEmpty(StrokeEng);
    }

    private boolean checkPYSimpNull() {
        return language == 2 && !TextUtils.isEmpty(PYSimp);
    }

    private boolean checkStrokeTradNull() {
        return language == 0 && !TextUtils.isEmpty(StrokeTrad);
    }

    public String getDescription() {
        if (AppUtil.getCurLanguage() == 0 && !TextUtils.isEmpty(DescT)) {
            return DescT;
        } else if (AppUtil.getCurLanguage() == 1 && !TextUtils.isEmpty(DescE)) {
            return DescE;
        } else if (AppUtil.getCurLanguage() == 2 && !TextUtils.isEmpty(DescS)) {
            return DescS;
        }
        return "";
    }


    public int percent;


    //CompanyID|DescE|DescS|DescT
    public void parseDescription(String[] csv) {
        this.CompanyID = csv[0];
        this.DescE = csv[1];
        this.DescS = csv[2];
        this.DescT = csv[3];
    }

    public void parseExhibitor(String[] csv) {
//        CompanyID | CompanyNameEN | CompanyNameTW | CompanyNameCN | AddressE | AddressT | AddressS |
// Postal | Tel | Fax | Email | Website | CountryID | BoothNo | StrokeEng | StrokeTrad | StrokeSimp
// | PYSimp | ImgFolder | DescE | DescS | DescT | PhotoFileName | NewTechUpdateDate | SEQ_EN | SEQ_TC | SEQ_SC | HallNo


        // CompanyID|CompanyNameEN|CompanyNameTW|CompanyNameCN|AddressE|AddressT|AddressS|Tel|Fax|Email|Website|CountryID
        // |BoothNo|StrokeEng|StrokeTrad|StrokeSimp|PYSimp|ImgFolder|DescE|DescS|DescT|PhotoFileName|NewTechUpdateDate|SEQ_EN|SEQ_TC|SEQ_SC|HallNo

        this.CompanyID = csv[0];
        this.CompanyNameEN = csv[1];
        this.CompanyNameTW = csv[2];
        this.CompanyNameCN = csv[3];
        this.AddressE = csv[4];
        this.AddressT = csv[5];
        this.AddressS = csv[6];
        this.Tel = csv[7];
        this.Fax = csv[8];
        this.Email = csv[9];
        this.Website = csv[10];
        this.CountryID = csv[11];
        this.BoothNo = csv[12];
        this.StrokeEng = csv[13];
        this.StrokeTrad = csv[14];
        this.StrokeSimp = csv[15];
        this.PYSimp = csv[16];
        this.ImgFolder = csv[17];
        this.DescE = csv[18];
        this.DescS = csv[19];
        this.DescT = csv[20];
        this.PhotoFileName = csv[21];
        this.NewTechUpdateDate = csv[22];
        this.SeqEN = csv[23];
        this.SeqTC = csv[24];
        this.SeqSC = csv[25];
        this.HallNo = csv[26];

        if (HallNo.equals("1.1")) {
            seqHall = 1.0;
        } else if (HallNo.equals("1.2")) {
            seqHall = 2.0;
        } else if (HallNo.equals("2.1")) {
            seqHall = 3.0;
        } else if (HallNo.equals("2.1Y")) {
            seqHall = 3.1;
        } else if (HallNo.equals("2.2")) {
            seqHall = 4.0;
        } else if (HallNo.equals("3.1")) {
            seqHall = 5.0;
        } else if (HallNo.equals("3.1Y")) {
            seqHall = 5.1;
        } else if (HallNo.equals("3.2")) {
            seqHall = 6.0;
        } else if (HallNo.equals("4.1")) {
            seqHall = 7.0;
        } else if (HallNo.equals("4.1Y")) {
            seqHall = 7.1;
        } else if (HallNo.equals("4.2")) {
            seqHall = 8.0;
        } else if (HallNo.equals("5.1")) {
            seqHall = 9.0;
        } else if (HallNo.equals("5.2")) {
            seqHall = 10.0;
        } else if (HallNo.equals("6.1")) {
            seqHall = 11.0;
        } else if (HallNo.equals("7.1")) {
            seqHall = 12.0;
        } else if (HallNo.equals("8.1")) {
            seqHall = 13.0;
        } else if (HallNo.equals("8.1A")) {
            seqHall = 14.0;
        } else if (HallNo.equals("8.1B")) {
            seqHall = 15.0;
        } else if (HallNo.toUpperCase().contains("PP")) {
            seqHall = 16.0;
        } else if (HallNo.contains("9.1")) {
            seqHall = 17.0;
        } else if (HallNo.contains("9.2")) {
            seqHall = 18.0;
        } else if (HallNo.contains("9.3")) {
            seqHall = 19.0;
        } else if (HallNo.equals("10.1")) {
            seqHall = 20.0;
        } else if (HallNo.equals("10.2")) {
            seqHall = 21.0;
        } else if (HallNo.equals("10.3")) {
            seqHall = 22.0;
        } else if (HallNo.equals("11.1")) {
            seqHall = 23.0;
        } else if (HallNo.equals("11.2")) {
            seqHall = 24.0;
        } else if (HallNo.equals("11.3")) {
            seqHall = 25.0;
        } else if (HallNo.equals("12.1")) {
            seqHall = 26.0;
        } else if (HallNo.equals("12.2")) {
            seqHall = 27.0;
        } else if (HallNo.equals("13.1")) {
            seqHall = 28.0;
        } else if (HallNo.equals("13.2")) {
            seqHall = 29.0;
        } else if (HallNo.equals("TBC")) {
            seqHall = 30.0;
        }


    }

    private void setSeqHall(Exhibitor entity) {
        if (entity.getHallNo().equals("1.1")) {
            entity.seqHall = 1.0;
        } else if (entity.getHallNo().equals("1.2")) {
            entity.seqHall = 2.0;
        } else if (entity.getHallNo().equals("2.1")) {
            entity.seqHall = 3.0;
        } else if (entity.getHallNo().equals("2.1Y")) {
            entity.seqHall = 3.1;
        } else if (entity.getHallNo().equals("2.2")) {
            entity.seqHall = 4.0;
        } else if (entity.getHallNo().equals("3.1")) {
            entity.seqHall = 5.0;
        } else if (entity.getHallNo().equals("3.1Y")) {
            entity.seqHall = 5.1;
        } else if (entity.getHallNo().equals("3.2")) {
            entity.seqHall = 6.0;
        } else if (entity.getHallNo().equals("4.1")) {
            entity.seqHall = 7.0;
        } else if (entity.getHallNo().equals("4.1Y")) {
            entity.seqHall = 7.1;
        } else if (entity.getHallNo().equals("4.2")) {
            entity.seqHall = 8.0;
        } else if (entity.getHallNo().equals("5.1")) {
            entity.seqHall = 9.0;
        } else if (entity.getHallNo().equals("5.2")) {
            entity.seqHall = 10.0;
        } else if (entity.getHallNo().equals("6.1")) {
            entity.seqHall = 11.0;
        } else if (entity.getHallNo().equals("7.1")) {
            entity.seqHall = 12.0;
        } else if (entity.getHallNo().equals("8.1")) {
            entity.seqHall = 13.0;
        } else if (entity.getHallNo().equals("8.1A")) {
            entity.seqHall = 14.0;
        } else if (entity.getHallNo().equals("8.1B")) {
            entity.seqHall = 15.0;
        } else if (entity.getHallNo().toUpperCase().contains("PP")) {
            entity.seqHall = 16.0;
        } else if (entity.getHallNo().contains("9.1")) {
            entity.seqHall = 17.0;
        } else if (entity.getHallNo().equals("9.2")) {
            entity.seqHall = 18.0;
        } else if (entity.getHallNo().equals("9.3")) {
            entity.seqHall = 19.0;
        } else if (entity.getHallNo().equals("10.1")) {
            entity.seqHall = 20.0;
        } else if (entity.getHallNo().equals("10.2")) {
            entity.seqHall = 21.0;
        } else if (entity.getHallNo().equals("10.3")) {
            entity.seqHall = 22.0;
        } else if (entity.getHallNo().equals("11.1")) {
            entity.seqHall = 23.0;
        } else if (entity.getHallNo().equals("11.2")) {
            entity.seqHall = 24.0;
        } else if (entity.getHallNo().equals("11.3")) {
            entity.seqHall = 25.0;
        } else if (entity.getHallNo().equals("12.1")) {
            entity.seqHall = 26.0;
        } else if (entity.getHallNo().equals("12.2")) {
            entity.seqHall = 27.0;
        } else if (entity.getHallNo().equals("13.1")) {
            entity.seqHall = 28.0;
        } else if (entity.getHallNo().equals("13.2")) {
            entity.seqHall = 29.0;
        } else if (entity.getHallNo().equals("TBC")) {
            entity.seqHall = 30.0;
        }
    }


    @Override
    public String toString() {
//        return "Exhibitor [CompanyID=" + CompanyID + ", CompanyNameEN=" + CompanyNameEN + ", CompanyNameTW="
//                + CompanyNameTW + ", CompanyNameCN=" + CompanyNameCN + ", BoothNo=" + BoothNo + ", StrokeEng=" + StrokeEng
//                + ", StrokeTrad=" + StrokeTrad + ", StrokeSimp=" + StrokeSimp + ", PYSimp=" + PYSimp + ", ImgFolder="
//                + ImgFolder + ", ExhibitNameE=" + ExhibitNameE + ", ExhibitNameS=" + ExhibitNameS + ", ExhibitNameT="
//                + ExhibitNameT + ", DescE=" + DescE + ", DescS=" + DescS + ", DescT=" + DescT + ", PhotoFileName="
//                + PhotoFileName + ", SeqEN=" + SeqEN + ", SeqTC=" + SeqTC + ", SeqSC=" + SeqSC + ", HallNo=" + HallNo
//                + ", IsFavourite=" + IsFavourite + ", percent=" + percent + "]";


        return "Exhibitor [CompanyID=" + CompanyID + ", CompanyNameCN=" + CompanyNameCN + "]";
    }


    // KEEP METHODS END


    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeString(this.CompanyID);
        dest.writeString(this.CompanyNameEN);
        dest.writeString(this.CompanyNameTW);
        dest.writeString(this.CompanyNameCN);
        dest.writeString(this.AddressE);
        dest.writeString(this.AddressT);
        dest.writeString(this.AddressS);
        dest.writeString(this.Tel);
        dest.writeString(this.Fax);
        dest.writeString(this.Email);
        dest.writeString(this.Website);
        dest.writeString(this.CountryID);
        dest.writeString(this.BoothNo);
        dest.writeString(this.StrokeEng);
        dest.writeString(this.StrokeTrad);
        dest.writeString(this.StrokeSimp);
        dest.writeString(this.PYSimp);
        dest.writeString(this.ImgFolder);
        dest.writeString(this.DescE);
        dest.writeString(this.DescS);
        dest.writeString(this.DescT);
        dest.writeString(this.PhotoFileName);
        dest.writeString(this.NewTechUpdateDate);
        dest.writeString(this.SeqEN);
        dest.writeString(this.SeqTC);
        dest.writeString(this.SeqSC);
        dest.writeString(this.HallNo);
        dest.writeValue(this.IsFavourite);
        dest.writeString(this.Note);
        dest.writeInt(this.Rate);
        dest.writeValue(this.IsDelete);
        dest.writeString(this.descUpdatedAt);
        dest.writeString(this.updatedAt);
        dest.writeInt(this.i);
        dest.writeString(this.CompanyName);
        dest.writeString(this.Sort);
        dest.writeString(this.CountryName);
        dest.writeParcelable(this.isPhotoLogo, 0);
        dest.writeParcelable(this.isCollected, 0);
        dest.writeParcelable(this.isTypeLabel, 0);
        dest.writeInt(this.language);
        dest.writeInt(this.percent);
    }

    protected Exhibitor(Parcel in) {
        this.CompanyID = in.readString();
        this.CompanyNameEN = in.readString();
        this.CompanyNameTW = in.readString();
        this.CompanyNameCN = in.readString();
        this.AddressE = in.readString();
        this.AddressT = in.readString();
        this.AddressS = in.readString();
        this.Tel = in.readString();
        this.Fax = in.readString();
        this.Email = in.readString();
        this.Website = in.readString();
        this.CountryID = in.readString();
        this.BoothNo = in.readString();
        this.StrokeEng = in.readString();
        this.StrokeTrad = in.readString();
        this.StrokeSimp = in.readString();
        this.PYSimp = in.readString();
        this.ImgFolder = in.readString();
        this.DescE = in.readString();
        this.DescS = in.readString();
        this.DescT = in.readString();
        this.PhotoFileName = in.readString();
        this.NewTechUpdateDate = in.readString();
        this.SeqEN = in.readString();
        this.SeqTC = in.readString();
        this.SeqSC = in.readString();
        this.HallNo = in.readString();
        this.IsFavourite = (Integer) in.readValue(Integer.class.getClassLoader());
        this.Note = in.readString();
        this.Rate = in.readInt();
        this.IsDelete = (Boolean) in.readValue(Boolean.class.getClassLoader());
        this.descUpdatedAt = in.readString();
        this.updatedAt = in.readString();
        this.i = in.readInt();
        this.CompanyName = in.readString();
        this.Sort = in.readString();
        this.CountryName = in.readString();
        this.isPhotoLogo = in.readParcelable(ObservableBoolean.class.getClassLoader());
        this.isCollected = in.readParcelable(ObservableBoolean.class.getClassLoader());
        this.isTypeLabel = in.readParcelable(ObservableBoolean.class.getClassLoader());
        this.language = in.readInt();
        this.percent = in.readInt();
    }

    public static final Parcelable.Creator<Exhibitor> CREATOR = new Parcelable.Creator<Exhibitor>() {
        public Exhibitor createFromParcel(Parcel source) {
            return new Exhibitor(source);
        }

        public Exhibitor[] newArray(int size) {
            return new Exhibitor[size];
        }
    };
}
