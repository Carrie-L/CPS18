package com.adsale.ChinaPlas.dao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here

import java.util.ArrayList;
import java.util.Collections;
// KEEP INCLUDES END

/**
 * Entity mapped to table "FLOOR_PLAN_COORDINATE".
 */
public class FloorPlanCoordinate {

    private Integer ExhibitionId;
    private String BoothNum;
    private String Nav;
    private String Sharp;
    private String SPC;
    private String Hall;
    private String Fx;

    private Integer X1;
    private Integer Y1;
    private Integer X2;
    private Integer Y2;

    public FloorPlanCoordinate() {
    }

    public FloorPlanCoordinate(Integer exhibitionId, String boothNum, String nav, String sharp, String SPC, String hall, String fx, Integer x1, Integer Y1, Integer X2, Integer Y2) {
        ExhibitionId = exhibitionId;
        BoothNum = boothNum;
        Nav = nav;
        Sharp = sharp;
        this.SPC = SPC;
        Hall = hall;
        Fx = fx;
        this.X1 = x1;
        this.Y1 = Y1;
        this.X2 = X2;
        this.Y2 = Y2;
    }

    public Integer getExhibitionId() {
        return ExhibitionId;
    }

    public void setExhibitionId(Integer ExhibitionId) {
        this.ExhibitionId = ExhibitionId;
    }

    public String getBoothNum() {
        return BoothNum;
    }

    public void setBoothNum(String BoothNum) {
        this.BoothNum = BoothNum;
    }

    public String getNav() {
        return Nav;
    }

    public void setNav(String Nav) {
        this.Nav = Nav;
    }

    public String getSharp() {
        return Sharp;
    }

    public void setSharp(String Sharp) {
        this.Sharp = Sharp;
    }

    public String getSPC() {
        return SPC;
    }

    public void setSPC(String SPC) {
        this.SPC = SPC;
    }

    public String getHall() {
        return Hall;
    }

    public void setHall(String Hall) {
        this.Hall = Hall;
    }

    public String getFx() {
        return Fx;
    }

    public void setFx(String Fx) {
        this.Fx = Fx;
    }

    public Integer getX1() {
        return X1;
    }

    public void setX1(Integer X1) {
        this.X1 = X1;
    }

    public Integer getY1() {
        return Y1;
    }

    public void setY1(Integer Y1) {
        this.Y1 = Y1;
    }

    public Integer getX2() {
        return X2;
    }

    public void setX2(Integer X2) {
        this.X2 = X2;
    }

    public Integer getY2() {
        return Y2;
    }

    public void setY2(Integer Y2) {
        this.Y2 = Y2;
    }

    // KEEP METHODS - put your custom methods here
    public void parser(String[] strings) {
        this.ExhibitionId = Integer.valueOf(strings[0]);
        this.BoothNum = strings[1];
        this.Nav = strings[2];
        this.Sharp = strings[3];
        this.SPC = strings[4];
        this.Hall = strings[5];
        this.Fx = strings[6];

        separateNav();
    }

    private void separateNav() {
        if (Sharp.equals("RECT")) {
            String[] navToken = Nav.split(",");

            if (navToken != null && navToken.length > 3) {
                X1 = Integer.parseInt(navToken[0]);
                Y1 = Integer.parseInt(navToken[1]);
                X2 = Integer.parseInt(navToken[2]);
                Y2 = Integer.parseInt(navToken[3]);
            }
        } else {

            String[] navToken = Nav.split(",");
            if (navToken != null && navToken.length > 3) {
                ArrayList<Integer> xArray = new ArrayList<Integer>();
                ArrayList<Integer> yArray = new ArrayList<Integer>();
                for (int i = 0; i < navToken.length; i++) {

                    if (i % 2 == 0) {
                        xArray.add(Integer.parseInt(navToken[i]));
                    } else {
                        yArray.add(Integer.parseInt(navToken[i]));
                    }
                }

                Collections.sort(xArray);
                Collections.sort(yArray);
                X1 = xArray.get(0);
                Y1 = yArray.get(0);
                X2 = xArray.get(xArray.size() - 1);
                Y2 = yArray.get(yArray.size() - 1);

            }
        }
    }

    @Override
    public String toString() {
        return "FloorPlanCoordinate{" +
                "ExhibitionId=" + ExhibitionId +
                ", BoothNum='" + BoothNum + '\'' +
                ", Nav='" + Nav + '\'' +
                ", Sharp='" + Sharp + '\'' +
                ", SPC='" + SPC + '\'' +
                ", Hall='" + Hall + '\'' +
                ", Fx='" + Fx + '\'' +
                ", X1=" + X1 +
                ", Y1=" + Y1 +
                ", X2=" + X2 +
                ", Y2=" + Y2 +
                '}';
    }

    // KEEP METHODS END

}
