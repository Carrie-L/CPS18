package com.adsale.ChinaPlas.dao;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END

import android.databinding.ObservableBoolean;
import android.os.Parcel;
import android.os.Parcelable;
import android.text.TextUtils;

import com.adsale.ChinaPlas.utils.AppUtil;

/**
 * Entity mapped to table "APPLICATION_INDUSTRY".
 */
public class ApplicationIndustry implements Parcelable {

    private String IndustryID;
    /** Not-null value. */
    private String ApplicationEng;
    /** Not-null value. */
    private String ApplicationTC;
    /** Not-null value. */
    private String ApplicationSC;
    private String TCStroke;
    private String SCPY;

    // KEEP FIELDS - put your custom fields here
    public final ObservableBoolean isSelected=new ObservableBoolean(false);
    public String industry;
    // KEEP FIELDS END

    public ApplicationIndustry(){

    }

    public ApplicationIndustry(String IndustryID) {
        this.IndustryID = IndustryID;
    }

    public ApplicationIndustry(String IndustryID, String ApplicationEng, String ApplicationTC, String ApplicationSC, String TCStroke, String SCPY) {
        this.IndustryID = IndustryID;
        this.ApplicationEng = ApplicationEng;
        this.ApplicationTC = ApplicationTC;
        this.ApplicationSC = ApplicationSC;
        this.TCStroke = TCStroke;
        this.SCPY = SCPY;
    }

    public String getIndustryID() {
        return IndustryID;
    }

    public void setIndustryID(String IndustryID) {
        this.IndustryID = IndustryID;
    }

    /** Not-null value. */
    public String getApplicationEng() {
        return ApplicationEng;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setApplicationEng(String ApplicationEng) {
        this.ApplicationEng = ApplicationEng;
    }

    /** Not-null value. */
    public String getApplicationTC() {
        return ApplicationTC;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setApplicationTC(String ApplicationTC) {
        this.ApplicationTC = ApplicationTC;
    }

    /** Not-null value. */
    public String getApplicationSC() {
        return ApplicationSC;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setApplicationSC(String ApplicationSC) {
        this.ApplicationSC = ApplicationSC;
    }

    public String getTCStroke() {
        return TCStroke;
    }

    public void setTCStroke(String TCStroke) {
        this.TCStroke = TCStroke;
    }

    public String getSCPY() {
        return SCPY;
    }

    public void setSCPY(String SCPY) {
        this.SCPY = SCPY;
    }

    // KEEP METHODS - put your custom methods here
    /**
     * 新技术产品
     * @param industryID
     * @param industry
     */
    public ApplicationIndustry(String industryID, String industry) {
        IndustryID = industryID;
        this.industry = industry;
    }

    public void parser(String[] inputStream){
		this.IndustryID=inputStream[0];
		this.ApplicationEng=inputStream[1];
		this.ApplicationTC=inputStream[2];
		this.ApplicationSC=inputStream[3];
		this.TCStroke=inputStream[4];
		this.SCPY=inputStream[5];
	}
    
    public String getApplicationName(){
        if(!TextUtils.isEmpty(industry)){
            return industry;
        }
		return AppUtil.getName(ApplicationTC,ApplicationEng,ApplicationSC);
	}
    // KEEP METHODS END

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeString(this.IndustryID);
        dest.writeString(this.ApplicationEng);
        dest.writeString(this.ApplicationTC);
        dest.writeString(this.ApplicationSC);
        dest.writeString(this.TCStroke);
        dest.writeString(this.SCPY);
    }

    protected ApplicationIndustry(Parcel in) {
        this.IndustryID = in.readString();
        this.ApplicationEng = in.readString();
        this.ApplicationTC = in.readString();
        this.ApplicationSC = in.readString();
        this.TCStroke = in.readString();
        this.SCPY = in.readString();
    }

    public static final Parcelable.Creator<ApplicationIndustry> CREATOR = new Parcelable.Creator<ApplicationIndustry>() {
        public ApplicationIndustry createFromParcel(Parcel source) {
            return new ApplicationIndustry(source);
        }

        public ApplicationIndustry[] newArray(int size) {
            return new ApplicationIndustry[size];
        }
    };
}
