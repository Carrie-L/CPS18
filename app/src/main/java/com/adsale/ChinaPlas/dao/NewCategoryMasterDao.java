package com.adsale.ChinaPlas.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * DAO for table "NEW_PRODUCTS_ID".
*/
public class NewCategoryMasterDao extends AbstractDao<NewCategoryMaster, Void> {
    //MainTypeId|NameEn|NameTc|NameSc|CategoryId|OrderId
    public static final String TABLENAME = "NEW_CATEGORY_MASTER";

    /**
     * Properties of entity NewCategoryMaster.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property MainTypeId = new Property(0, String.class, "MainTypeId", false, "MainTypeId");
        public final static Property NameEn = new Property(1, String.class, "NameEn", false, "NameEn");
        public final static Property NameTc = new Property(2, String.class, "NameTc", false, "NameTc");
        public final static Property NameSc = new Property(3, String.class, "NameSc", false, "NameSc");
        public final static Property OrderId = new Property(4, int.class, "OrderId", false, "OrderId");
    };


    public NewCategoryMasterDao(DaoConfig config) {
        super(config);
    }

    public NewCategoryMasterDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"NEW_CATEGORY_MASTER\" (" + //
                "\"MainTypeId\" TEXT," + // 0: Spot
                "\"NameEn\" TEXT," + // 0: Spot
                "\"NameTc\" TEXT," + // 0: Spot
                "\"NameSc\" TEXT," + // 0: Spot
                "\"OrderId\" INTEGER);"); // 1: RID
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"NEW_CATEGORY_MASTER\"";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, NewCategoryMaster entity) {
        stmt.clearBindings();
 
        String MainTypeId = entity.getMainTypeId();
        if (MainTypeId != null) {
            stmt.bindString(1, MainTypeId);
        }
 
        String NameEn = entity.getNameEn();
        if (NameEn != null) {
            stmt.bindString(2, NameEn);
        }

        String NameTc = entity.getNameTc();
        if (NameTc != null) {
            stmt.bindString(3, NameTc);
        }

        String NameSc = entity.getNameSc();
        if (NameSc != null) {
            stmt.bindString(4, NameSc);
        }

        stmt.bindLong(5, entity.getOrderId());
    }

    /** @inheritdoc */
    @Override
    public Void readKey(Cursor cursor, int offset) {
        return null;
    }    

    /** @inheritdoc */
    @Override
    public NewCategoryMaster readEntity(Cursor cursor, int offset) {
        NewCategoryMaster entity = new NewCategoryMaster( //
                cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0), // DEVICE_ID
                cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1), // DEVICE_ID
                cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // DEVICE_ID
                cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // DEVICE_ID
              cursor.getInt(offset + 4) // DEVICE_ID
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, NewCategoryMaster entity, int offset) {
        entity.setMainTypeId(cursor.isNull(offset + 0) ? null : cursor.getString(offset + 0));
        entity.setNameEn(cursor.isNull(offset + 1) ? null : cursor.getString(offset + 1));
        entity.setNameTc(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setNameSc(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setOrderId(cursor.getInt(offset + 4));
     }
    
    /** @inheritdoc */
    @Override
    protected Void updateKeyAfterInsert(NewCategoryMaster entity, long rowId) {
        // Unsupported or missing PK type
        return null;
    }
    
    /** @inheritdoc */
    @Override
    public Void getKey(NewCategoryMaster entity) {
        return null;
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
